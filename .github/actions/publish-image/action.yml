name: 'Publish image to AWS ECR'

description: 'Builds, tags and pushes a Docker image to AWS ECR'

inputs:
  architecture:
    description: 'The architecture to use when building the image.'
    required: true
  role-to-assume:
    description: 'The role to assume when publishing the image'
    required: true
  image-tag:
    description: 'The tag to apply to the image'
    required: true
  ecr-repository:
    description: 'The name of the ECR to publish the image to'
    default: data-dashboard/front-end

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to AWS ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
          docker build --platform linux/${{ inputs.architecture }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      shell: bash
